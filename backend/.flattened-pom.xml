<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>mqml.spring.boot</groupId>
	<artifactId>mqml-spring-boot</artifactId>
	<version>1.0.0</version>
	<name>backend-parent</name>
	<description>backend-parent</description>

	<packaging>pom</packaging>

	<properties>
		<java.version>17</java.version>
		<revision>1.0.0</revision>
		<!-- https://mvnrepository.com/artifact/org.codehaus.mojo/flatten-maven-plugin -->
		<flatten-maven-plugin.version>1.7.2</flatten-maven-plugin.version>

		<!-- https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-core -->
		<!--<hibernate.version>6.6.22.Final</hibernate.version>-->

		<microsoft-graph>6.50.0</microsoft-graph>
		<azure-identity>1.15.4</azure-identity>
	</properties>

	<modules>
		<module>Spring-Data-Core</module>
		<module>Spring-Security-Authorization-Code-Resource-Server</module>
	</modules>

	<dependencies>

	</dependencies>

	<dependencyManagement>

		<dependencies>
			<dependency>
				<groupId>com.azure.spring</groupId>
				<artifactId>spring-cloud-azure-dependencies</artifactId>
				<version>5.23.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<!-- Include the sdk as a dependency -->
				<groupId>com.microsoft.graph</groupId>
				<artifactId>microsoft-graph</artifactId>
				<!--x-release-please-start-version-->
				<version>${microsoft-graph}</version>
				<!--x-release-please-end-->
			</dependency>

			<dependency>
				<!-- This dependency is only needed if you are using a TokenCredential object for authentication -->
				<groupId>com.azure</groupId>
				<artifactId>azure-identity</artifactId>
				<version>${azure-identity}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
			</plugin>
		</plugins>


		<pluginManagement>
			<plugins>
				<!--			The integration-test goal runs integration tests (typically named *IT.java) during the Maven integration-test phase.-->
				<!--			The verify goal checks the results of the integration tests and fails the build if any tests failed.-->
				<!--			classesDirectory specifies the directory containing compiled classes to be used during integration testing. Here, it points to target/classes, which is the default output directory for compiled classes.-->

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<classesDirectory>target/classes</classesDirectory>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<forkCount>1</forkCount>
						<reuseForks>true</reuseForks>
						<includes>
							<include>**/*Spec.java</include>
							<include>**/*Test.java</include>
						</includes>
					</configuration>
				</plugin>


<!--				The flatten-maven-plugin simplifies and resolves your Maven POM files, especially in multi-module projects. -->
<!--				It generates a "flattened" POM for deployment or release by removing unnecessary elements (like build, reporting, and profiles) and resolving property references. -->
<!--				This helps ensure reproducible builds and cleaner published POMs for CI/CD pipelines.-->

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>flatten-maven-plugin</artifactId>
					<version>${flatten-maven-plugin.version}</version>
					<configuration>
						<!-- Ensures that the flattened pom is used for install/deploy -->
						<updatePomFile>true</updatePomFile>
						<flattenMode>resolveCiFriendliesOnly</flattenMode>
					</configuration>

					<executions>
						<execution>
							<id>flatten</id>
							<phase>process-resources</phase>
							<goals>
								<goal>flatten</goal>
							</goals>
						</execution>
						<execution>
							<id>flatten.clean</id>
							<phase>clean</phase>
							<goals>
								<goal>clean</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.hibernate.orm.tooling</groupId>
					<artifactId>hibernate-enhance-maven-plugin</artifactId>
					<version>${hibernate.version}</version>
				</plugin>

				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<configuration>
						<mainClass>${start-class}</mainClass>
					</configuration>
					<executions>
						<execution>
							<id>build-info</id>
							<goals>
								<goal>build-info</goal>
							</goals>
						</execution>
						<execution>
							<id>repackage</id>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
						<execution>
							<id>repackage exe</id>
							<goals>
								<goal>repackage</goal>
							</goals>
							<configuration>
								<classifier>exe</classifier>
								<executable>true</executable>
							</configuration>
						</execution>
					</executions>
				</plugin>

			</plugins>
		</pluginManagement>

	</build>

	<repositories>

	</repositories>

</project>
